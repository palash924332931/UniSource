@{
    ViewBag.Title = "Product Details";
}
@*@model IEnumerable<UniSourceV2.prCategoryWiseMasterInfoV2_Result>*@
@section Scripts{
     <script>
        var tdate = "", fdate = "", sts = "";
        $(document).ready(function () {

            //to expand menu
            var propertyID = checkIsNull(fnGetParameterByName("property"), "");
            var itemCategory = checkIsNull(fnGetParameterByName("category"), "");
            //to set create button
            if (itemCategory == "Work Request" || itemCategory == "Total Work Request") {
                $("#itemCreateButton").html('<img src="../Content/imgs/workOrder1.png"class="create-img-WP" /><a href="/DataEntry/WorkRequest?category=new&propertyID=' + propertyID + '">Create Work Proposal</a>');
                //$("#itemCreateButton").html('<a class="btn btn-primary btn-sx" href="/DataEntry/WorkRequest?category=new&propertyID=' + propertyID + '"><i class="uni-icon icon-work1 small"></i> <b>Create Work Proposal</b></a>');
                $("a").removeClass("active");
                $("#liWorkRequest").addClass("active");
                $("#propertyDataTableSearch").attr("placeholder", "Search Work Proposal");

                //persmission for create work request button
                if("@Session["allowdailyreportuploads"]"!=null){
                    if("@Session["allowdailyreportuploads"].ToString()"!="Yes"){
                        $(".allow-data-entry").css("display", "none");
                    }
                } else {
                    window.location = "/Login/HomeLogin?area=admin";
                }
                //end of permission

                //to pull data from database
                $("#propertyDataTable").append('<thead>\
                    <tr>\
                        <th>Work Proposal #</th>\
                        <th>Date Submitted</th>\
                        <th>Property Name</th>\
                        <th>Hazard/Maint.</th>\
                        <th>Status</th>\
                    </tr>\
                </thead>');
                $('#propertyDataTable').dataTable({
                    "processing": true, // control the processing indicator.
                    "serverSide": true, // recommended to use serverSide when data is more than 10000 rows for performance reasons
                    "info": true,   // control table information display field
                    "stateSave": true,  //restore table state on page reload,
                    "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],                  // use the first inner array as the page length values and the second inner array as the displayed options
                    "bLengthChange": false,
                    "ajax": {
                        "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))/Home/PropertyInformationAjaxCall?PropertyId=" + propertyID + "&Category=" + itemCategory + "&OnlySearchExc=false",
                        "type": "GET"
                    },
                    "columns": [
                        { "data": "RefLink" },
                        { "data": "SubmittedDate", "orderable": true },
                        { "data": "PropertyName" },
                        { "data": "HazardMaintenance" },
                        { "data": "ApprovalStatus" }
                    ],
                    "order": [[1, "desc"]]
                });



            } else if (itemCategory == "Work Order" || itemCategory == "Total Work Order") {
                $("#itemCreateButton").html('<img src="../Content/imgs/dayInspection1.png" class="create-img-lnk" /> <a href="/DataEntry/WorkOrder?category=new&propertyID=' + propertyID + '">Create Work Order</a>');
                //$("#itemCreateButton").html('<a class="btn btn-info btn-sx" href="/DataEntry/WorkOrder?category=new&propertyID=' + propertyID + '"><i class="uni-icon icon-work1 small"></i> <b>Create Work Order</b></a>');
                $("a").removeClass("active");
                $("#liWorkOrder").addClass("active");
                $("#propertyDataTableSearch").attr("placeholder", "Search Work Order");
                //to pull data and bind data in propertyDataTable
                //persmission for create work Order button
                if("@Session["allowenterworkorder"]"!=null){
                    if("@Session["allowenterworkorder"].ToString()"!="Yes"){
                        $(".allow-data-entry").css("display", "none");
                    }
                } else {
                    window.location = "/Login/HomeLogin?area=admin";
                }
                //end of permission


                $("#propertyDataTable").append('<thead>\
                    <tr>\
                        <th>Work Order #</th>\
                        <th>Date Submitted</th>\
                        <th>Property Name</th>\
                        <th>Status</th>\
                    </tr>\
                </thead>');


                $('#propertyDataTable').dataTable({
                    "processing": true, // control the processing indicator.
                    "serverSide": true, // recommended to use serverSide when data is more than 10000 rows for performance reasons
                    "info": true,   // control table information display field
                    "stateSave": true,  //restore table state on page reload,
                    "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],                  // use the first inner array as the page length values and the second inner array as the displayed options
                    "bLengthChange": false,
                    "ajax": {
                        "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))/Home/PropertyInformationAjaxCall?PropertyId=" + propertyID + "&Category=" + itemCategory + "&OnlySearchExc=false",
                        "type": "GET"
                    },
                    "columns": [
                        { "data": "RefLink" },
                        { "data": "SubmittedDate", "orderable": true },
                        { "data": "PropertyName" },
                        { "data": "ApprovalStatus" }
                    ],
                    "order": [[1, "desc"]]
                });
            }
            else if (itemCategory == "Property Inspections" || itemCategory == "Total Property Inspections") {
                $("#itemCreateButton").html('<img src="../Content/imgs/workProposal1.png" class="create-img-lnk" /> <a href="/DataEntry/PropertyInspection?category=new&propertyID=' + propertyID + '">Create Inspection</a>');
                //$("#itemCreateButton").html('<a class="btn btn-success btn-sx" href="/DataEntry/PropertyInspection?category=new&propertyID=' + propertyID + '"><i class="uni-icon icon-work1 small"></i> <b>Create Inspection</b></a>');
                $("a").removeClass("active");
                $("#liPropertyInspection").addClass("active");
                $("#propertyDataTableSearch").attr("placeholder", "Search Property Inspection");

                //persmission for create Property Inspection button
                if("@Session["allowsubmitform1"]"!=null){
                    if("@Session["allowsubmitform1"].ToString()"!="Yes"){
                        $(".allow-data-entry").css("display", "none");
                    }
                } else {
                    window.location = "/Login/HomeLogin?area=admin";
                }
                //end of permission

                //pull data and show in propertyDataTable
                $("#propertyDataTable").append('<thead>\
                    <tr>\
                        <th>Property Inspection #</th>\
                        <th>Date Submitted</th>\
                        <th>Perform Date</th>\
                        <th>Property Name</th>\
                        <th>Status</th>\
                    </tr>\
                </thead>');


                $('#propertyDataTable').dataTable({
                    "processing": true, // control the processing indicator.
                    "serverSide": true, // recommended to use serverSide when data is more than 10000 rows for performance reasons
                    "info": true,   // control table information display field
                    "stateSave": true,  //restore table state on page reload,
                    "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],                  // use the first inner array as the page length values and the second inner array as the displayed options
                    "bLengthChange": false,
                    "ajax": {
                        "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))/Home/PropertyInformationAjaxCall?PropertyId=" + propertyID + "&Category=" + itemCategory + "&OnlySearchExc=false",
                        "type": "GET"
                    },
                    "columns": [
                        { "data": "RefLink" },
                        { "data": "SubmittedDate", "orderable": true },
                        { "data": "PerformedDate" },
                        { "data": "PropertyName" },
                        { "data": "ApprovalStatus" }
                    ],
                    "order": [[1, "desc"]]
                });
            }
            else if (itemCategory == "Snow Removal" || itemCategory == "Total Snow Removal") {
                $("#itemCreateButton").html('<img src="../Content/imgs/snow.png" class="create-img-WP" /> <a href="/DataEntry/SnowRemoval?category=new&propertyID=' + propertyID + '">Create Snow Report</a>');
                //$("#itemCreateButton").html('<a class="btn btn-warning btn-sx" href="/DataEntry/SnowRemoval?category=new&propertyID=' + propertyID + '"><i class="uni-icon icon-work1 small"></i><b>Create Snow Report</b></a>');
                $("a").removeClass("active");
                $("#liSnowRemoval").addClass("active");
                $("#propertyDataTableSearch").attr("placeholder", "Search Snow Removal");
                //persmission for create Snow Removal button
                if ("@Session["allowsubmitform2"]" != null) {
                    if ("@Session["allowsubmitform2"].ToString()" != "Yes") {
                        $(".allow-data-entry").css("display", "none");
                    }
                } else {
                    window.location = "/Login/HomeLogin?area=admin";
                }
                //end of permission

                //pull data and bidn propertyDataTable
                $("#propertyDataTable").append('<thead>\
                    <tr>\
                        <th>Snow Report #</th>\
                        <th>Date Submitted</th>\
                        <th>Perform Date</th>\
                        <th>Property Name</th>\
                        <th>Status</th>\
                    </tr>\
                </thead>');


                $('#propertyDataTable').dataTable({
                    "processing": true, // control the processing indicator.
                    "serverSide": true, // recommended to use serverSide when data is more than 10000 rows for performance reasons
                    "info": true,   // control table information display field
                    "stateSave": true,  //restore table state on page reload,
                    "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],                  // use the first inner array as the page length values and the second inner array as the displayed options
                    "bLengthChange": false,
                    "ajax": {
                        "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))/Home/PropertyInformationAjaxCall?PropertyId=" + propertyID + "&Category=" + itemCategory + "&OnlySearchExc=false",
                        "type": "GET"
                    },
                    "columns": [
                        { "data": "RefLink" },
                        { "data": "SubmittedDate", "orderable": true },
                        { "data": "PerformedDate" },
                        { "data": "PropertyName" },
                        { "data": "ApprovalStatus" }
                    ],
                    "order": [[1, "desc"]]
                });
                }


            //$('.totalItem').click(function () {
            //    if (itemCategory == "Work Request" || itemCategory == "Total Work Request") {
            //        window.location = "/DataEntry/WorkRequest?category=new&propertyID=" + propertyID;
            //    } else if (itemCategory == "Work Order" || itemCategory == "Total Work Order") {
            //        window.location = "/DataEntry/WorkOrder?category=new&propertyID=" + propertyID;
            //    }
            //    else if (itemCategory == "Property Inspections" || itemCategory == "Total Property Inspections") {
            //        window.location = "/DataEntry/PropertyInspection?category=new&propertyID=" + propertyID;
            //    }
            //    else if (itemCategory == "Snow Removal" || itemCategory == "Total Snow Removal") {
            //        window.location = "/DataEntry/SnowRemoval?category=new&propertyID=" + propertyID;
            //    }
            //});

            $('#propertyDataTableSearch').keyup(function () {
                fnDrawDataTable(this, "true");
            });

            $("#clearbtn").click(function () {
                $("#propertyDataTableSearch").val('');
                fnDrawDataTable(this, "");

            });

            //to set site menu url
            classUniSource.fnSiteSubMenuShow(propertyID, "@ViewBag.PropertyName", "");


            // click action on data table using in property
            $('#propertyDataTable tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                }
                else {
                    $('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
            });
        });

        //to show total item

        //function fnIndividualRecordDetails(category, propertyID, specificID) {
        //    var itemCategory = checkIsNull(fnGetParameterByName("category"), "");
        //    var propertyIDURL = checkIsNull(fnGetParameterByName("property"), "");
        //    if (itemCategory == "Work Request" || itemCategory == "total Work Request") {
        //        window.location = "/DataEntry/WorkRequest?category=edit&propertyID=" + propertyIDURL + "&specificID=" + specificID;
        //    } else if (itemCategory == "Work Order" || itemCategory == "total Work Order") {
        //        window.location = "/DataEntry/WorkOrder?category=edit&propertyID=" + propertyIDURL + "&specificID=" + specificID;
        //    } else if (itemCategory == "Property Inspections" || itemCategory == "total Property Inspections" || itemCategory == "Total Property Inspections") {
        //        window.location = "/DataEntry/InspectionReport?category=edit&propertyID=" + propertyIDURL + "&specificID=" + specificID;
        //    }
        //    return false;

        //}

        $("#PopS").popover({
            html: true,
            title: 'Filter By: <a href="#" class="close" data-dismiss="alert">' + tdate + '×</a>'
        }).on('shown.bs.popover', function () {
            //dynamic status binding
            var serachTitle = fnGetParameterByName("category");
            if (serachTitle.toLowerCase().indexOf("request") != -1) {
                var newOption = "<option value='" + "0" + "'>Pending</option><option value='" + "1" + "'>Posted to PM</option><option value='" + "2" + "'>Rejected</option><option value='" + "4" + "'>Create Work Order</option><option value='" + "3" + "'>Defer to Later Date</option><option value='" + "5" + "'>Assign to Non-Unisource Vendor</option>";
                $("#status").append(newOption);
            } else if (serachTitle.toLowerCase().indexOf("order") != -1) {
                var newOption = "<option value='" + "8" + "'>Open</option><option value='" + "9" + "'>Closed</option><option value='" + "0" + "'>Delete</option>";
                $("#status").append(newOption);
            } else if (serachTitle.toLowerCase().indexOf("inspections") != -1) {
                var newOption = "<option value='" + "0" + "'>Pending</option><option value='" + "1" + "'>Approved</option><option value='" + "2" + "'>Rejected</option>";
                $("#status").append(newOption);
            } else if (serachTitle.toLowerCase().indexOf("snow") != -1) {
                var newOption = "<option value='" + "0" + "'>Pending</option><option value='" + "1" + "'>Approved</option><option value='" + "2" + "'>Rejected</option>";
                $("#status").append(newOption);
            }
            //end

            $("#fromDate").datepicker();
            //to call calender
            //$('.date-time').datepicker({ dateFormat: 'yy-mm-dd' });

            $('.date-time').click(function () {
                $("#fromDate").datepicker();
                $("#toDate").datepicker();
                $('#ui-datepicker-div').css("z-index", "5000");
            });

            $("#btncustomfilter").attr("disabled", true);
            //to  check search button enable /disable
            $(".check-search").change(function () {
                checkSearchButtonEnableDisable(this);
            });

            //to close popover
            $(".close").click(function () {
                $(this).parents(".popover").popover('hide');
            });
            //to set preivous datetime
            $('#toDate').val(tdate);
            $('#fromDate').val(fdate);
            if (sts != "") {
                $('#status [value=' + sts + ']').prop('selected', true);
            }


            $(".custom-search").unbind();
            $(".custom-search").bind("click", function () {
                fnDrawDataTable(this, "");
                //to save date in global variable;
                tdate = $('#toDate').val();
                fdate = $('#fromDate').val();
                sts = checkIsNull($('#status :selected').val(), "");
            });

            //to check previous
            checkSearchButtonEnableDisable('attr');
        });

        function checkSearchButtonEnableDisable(attrb) {
            var fromDate = checkIsNull($('#fromDate').val(), "");
            var toDate = checkIsNull($('#toDate').val(), "");
            var status = checkIsNull($('#status').val(), "");

            if (fromDate != "" && toDate != "") {
                $("#btncustomfilter").attr("disabled", false);
            }


            if (fromDate == "" && status == "") {
                $("#btncustomfilter").attr("disabled", true);
                //alertify.alert("Enter the 'From Date' first");
                $('#toDate').val("");
            }
            if (new Date(fromDate) > new Date(toDate)) {
                $('#toDate').val("");
                $("#btncustomfilter").attr("disabled", true);
                alertify.alert("'To' date must be greater than 'From' date.");
                return false;
            }
            if (status != "") {
                $("#btncustomfilter").attr("disabled", false);
            }
        }

        function fnDrawDataTable(attr, searchExecutionStatus) {
            //alert(":" + $(attr).attr("name"));
            if ($(attr).attr("name") == "CustomClear") {
                $("#propertyDataTableSearch").val("");
                $('#fromDate').val("");
                $('#toDate').val("");
                $('#status').val("");
                var fromDate = "";
                var toDate = "";
                var approvalStatusText = "%";
                var executeStatus = true;
                $("#PopS").popover('hide');
                $("#PopS").attr("src", "../Content/imgs/filter.png")
                //to clear global variable
                tdate = "";
                fdate = "";
                sts = "";

            } else {
                var fromDate = checkIsNull($('#fromDate').val(), "");
                fromDate = checkIsNull(fnConvertDate(fromDate, "mm/dd/yyyy", "yyyy-mm-dd"), "");
                var toDate = checkIsNull($('#toDate').val(), "");
                toDate = checkIsNull(fnConvertDate(toDate, "mm/dd/yyyy", "yyyy-mm-dd"), "");
                var approvalStatusText = checkIsNull($('#status').val(), "%");

                var executeStatus = true;
                $("#PopS").popover('hide');
                if (searchExecutionStatus != "true") {
                    $("#PopS").attr("src", "../Content/imgs/filtered.png")
                }
            }

            var category = checkIsNull(fnGetParameterByName("category"), "");
            var propertyID = checkIsNull(fnGetParameterByName("property"), "");
            if (category == "total Work Request" || category == "Total Work Request" || category == "Work Request") {
                $("#propertyDataTable tbody").remove();
                $('#propertyDataTable').dataTable({
                    "bDestroy": true,
                    "processing": true, // control the processing indicator.
                    "serverSide": true, // recommended to use serverSide when data is more than 10000 rows for performance reasons
                    "info": true,   // control table information display field
                    "stateSave": true,  //restore table state on page reload,
                    "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],                  // use the first inner array as the page length values and the second inner array as the displayed options
                    "bLengthChange": false,
                    "ajax": {
                        "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))/Home/PropertyInformationAjaxCall?PropertyId=" + propertyID + "&Category=" + category + "&FromDate=" + fromDate + "&ToDate=" + toDate + "&ApplicationStatus=" + approvalStatusText + "&ExecuteStatus=" + executeStatus + "&SearchInfo=" + checkIsNull($('#propertyDataTableSearch').val(), "") + "&OnlySearchExc=" + searchExecutionStatus + "",
                        "type": "GET"
                    },
                    "columns": [
                        { "data": "RefLink" },
                        { "data": "SubmittedDate", },
                        { "data": "PropertyName" },
                        { "data": "HazardMaintenance" },
                        { "data": "ApprovalStatus" }
                    ]
                });

                executeStatus = false;
            } else if (category == "total Work Order" || category == "Total Work Order" || category == "Work Order") {
                $("#propertyDataTable tbody").remove();
                $('#propertyDataTable').dataTable({
                    "bDestroy": true,
                    "processing": true, // control the processing indicator.
                    "serverSide": true, // recommended to use serverSide when data is more than 10000 rows for performance reasons
                    "info": true,   // control table information display field
                    "stateSave": true,  //restore table state on page reload,
                    "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],                  // use the first inner array as the page length values and the second inner array as the displayed options
                    "bLengthChange": false,
                    "ajax": {
                        "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))/Home/PropertyInformationAjaxCall?PropertyId=" + propertyID + "&Category=" + category + "&FromDate=" + fromDate + "&ToDate=" + toDate + "&ApplicationStatus=" + approvalStatusText + "&ExecuteStatus=" + executeStatus + "&SearchInfo=" + checkIsNull($('#propertyDataTableSearch').val(), "") + "&OnlySearchExc=" + searchExecutionStatus + "",
                        "type": "GET"
                    },
                    "columns": [
                        { "data": "RefLink" },
                        { "data": "SubmittedDate" },
                        { "data": "PropertyName" },
                        { "data": "ApprovalStatus" }
                    ],
                    "order": [[1, "desc"]]
                });
            } else {
                $("#propertyDataTable tbody").remove();
                $('#propertyDataTable').dataTable({
                    "bDestroy": true,
                    "processing": true, // control the processing indicator.
                    "serverSide": true, // recommended to use serverSide when data is more than 10000 rows for performance reasons
                    "info": true,   // control table information display field
                    "stateSave": true,  //restore table state on page reload,
                    "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]],                  // use the first inner array as the page length values and the second inner array as the displayed options
                    "bLengthChange": false,
                    "ajax": {
                        "url": "@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))/Home/PropertyInformationAjaxCall?PropertyId=" + propertyID + "&Category=" + category + "&FromDate=" + fromDate + "&ToDate=" + toDate + "&ApplicationStatus=" + approvalStatusText + "&ExecuteStatus=" + executeStatus + "&SearchInfo=" + checkIsNull($('#propertyDataTableSearch').val(), "") + "&OnlySearchExc=" + searchExecutionStatus + "",
                        "type": "GET"
                    },
                    "columns": [
                        { "data": "RefLink" },
                        { "data": "SubmittedDate", "orderable": true },
                        { "data": "PerformedDate" },
                        { "data": "PropertyName" },
                        { "data": "ApprovalStatus" }
                    ],
                    "order": [[1, "desc"]]
                });
            }
    }
    </script>

}

<div class="col-lg-12 col-md-12 col-sm-12 srcbtn right-padding-zero">
    <h2 class="page-header">@ViewBag.TitleTable</h2>
</div>


<table class="col-md-12 min-space">
    <tr>
        <td style="width: 67%">
           <input type="text" id="propertyDataTableSearch" class="form-control" placeholder="Search Work Proposal">
        </td>
        <td style="width: 1%"></td>
        <td style="width: 2%"><img src="~/Content/imgs/filter.png" style="height:30px; width:35px;" data-toggle="popover" data-trigger="click" data-placement="bottom" data-container="body" data-html="true" id="PopS" data-content='<div id="popover-content">
            <div>
               <div class="form-group">
                    <label>From:</label>
                    <div class="input-group date date-time">
                        <input type="text" class="date-picker form-control check-search" id="fromDate" />
                        <label for="fromDate" class="input-group-addon btn">
                            <span class="fa fa-calendar"></span>
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <label>To:</label>
                    <div class="input-group date date-time">
                        <input type="text" class="date-picker form-control check-search" id="toDate" />
                        <label for="toDate" class="input-group-addon btn">
                            <span class="fa fa-calendar"></span>
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <label>Status:</label>
                    <select class="form-control check-search" id="status">  <option></option></select>
                </div>
                <div class="form-group">
                    <button id="btncustomfilter" class="btn btn-primary btn-block custom-search" name="CustomeFilter">Search</button>
                </div>
            </div>
        </div>'></img></td>
        <td style="width: 1%"></td>
        <td style="width: 5%">
            <a class="btn btn-default custom-src-cntrl" href="#">Search</a>
        </td>
        <td style="width: 1%"></td>
        <td style="width: 5%">
            <a id="clearbtn" class="btn btn-default custom-src-cntrl" name="CustomClear" href="#">Clear</a>
        </td>
        <td style="width: 18%" class="allow-data-entry">
            <div class="createNew srcbtn" id="itemCreateButton">
        </div>
            </td>
    </tr>
</table>



<div class="row">
    <div class="col-md-12 col-sm-12 col-lg-12">        
            <table class="table table-striped table-bordered table-hover" id="propertyDataTable"></table>       
    </div>
</div>